name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Check directory structure
      run: |
        echo "Repository structure:"
        ls -la
        
    - name: Install Python dependencies
      if: hashFiles('urbanherbapi/requirements.txt') != ''
      working-directory: ./urbanherbapi
      continue-on-error: true
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || echo "Failed to install Python dependencies"
    
    - name: Install Node.js dependencies
      if: hashFiles('UrbanHerbWeb/package.json') != ''
      working-directory: ./UrbanHerbWeb
      continue-on-error: true
      run: |
        npm ci || npm install || echo "Failed to install Node.js dependencies"
        npm run build --if-present || echo "Failed to build frontend"

  lint:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Run Python linting
      if: hashFiles('urbanherbapi/**/*.py') != ''
      working-directory: ./urbanherbapi
      continue-on-error: true
      run: |
        pip install flake8
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || echo "Linting issues found"
    
    - name: Run JavaScript/TypeScript linting
      if: hashFiles('UrbanHerbWeb/package.json') != ''
      working-directory: ./UrbanHerbWeb
      continue-on-error: true
      run: |
        npm ci || npm install
        npm run lint --if-present || echo "Linting issues found"
